<assembly>
    <!-- id标识，唯一即可，若pom中的appendAssemblyId设置为true，则会添加此id作为后缀 -->
    <id>assembly-it</id>
    <formats>
        <!-- 打包的格式 -->
        <format>jar</format>
    </formats>
<!--    &lt;!&ndash; 打包的文件不包含项目目录，压缩包下直接是文件 &ndash;&gt;-->
<!--    <includeBaseDirectory>false</includeBaseDirectory>-->

    <!-- 配置依赖的输出 -->
    <dependencySets>
        <dependencySet>
            <!-- 是否把当前项目的输出放到lib里面 -->
            <useProjectArtifact>false</useProjectArtifact>
            <scope>system</scope>
            <!-- 依赖输出目录，相对输出目录的根目录，当前示例把依赖输出到lib目录 -->
            <outputDirectory>/lib</outputDirectory>
        </dependencySet>

<!--        <dependencySet>-->
<!--            <useProjectArtifact>false</useProjectArtifact>-->
<!--            <scope>runtime</scope>-->
<!--            &lt;!&ndash; 依赖输出目录，相对输出目录的根目录，当前示例把依赖输出到lib目录 &ndash;&gt;-->
<!--            <outputDirectory>/lib</outputDirectory>-->
<!--        </dependencySet>-->
    </dependencySets>

    <!-- 文件输出 -->
    <fileSets>
        <fileSet>
            <!-- 源目录，此处是把编译出来的class文件都输出到根目录下的classes目录 -->
            <directory>${project.build.directory}/classes</directory>
            <!-- 输出目录 -->
            <outputDirectory>/classes</outputDirectory>
        </fileSet>

        <fileSet>
            <directory>install/daemon</directory>
            <includes>
                <include>commons-daemon-1.0.15.jar</include>
            </includes>
            <outputDirectory>/lib</outputDirectory>
        </fileSet>

        <fileSet>
            <!-- 此处是把daemon文件全部输出到根目录下的install目录 -->
            <directory>install/daemon/windows</directory>
            <outputDirectory>/bin</outputDirectory>
        </fileSet>
    </fileSets>
</assembly>